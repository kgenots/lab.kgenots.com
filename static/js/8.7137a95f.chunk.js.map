{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/blog-utils/CharacterCounter.js"],"names":["_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","CharacterCounter","useState","message","setMessage","count","setCount","trimmedCount","setTrimmedCount","sm","style","fontWeight","name","id","rows","placeholder","onChange","event","text","target","replace"],"mappings":"mKAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAC3F,GAAU,MAANI,EAAJ,CACA,IAGIG,EAAIC,EAHJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAET,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGS,QACTf,GAAKQ,EAAKQ,SAAWhB,GAF4BS,GAAK,GAa9D,CATE,MAAOQ,GACPP,GAAK,EACLH,EAAKU,CACP,CAAE,QACA,IACOR,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,QAG9C,CAFE,QACA,GAAIO,EAAI,MAAMH,CAChB,CACF,CACA,OAAOC,CApBe,CAqBxB,CFlBgC,CAAqBT,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,4IACtB,CHGsG,EACtG,C,+EIiDeC,UA7CU,WACvB,MAA8BC,mBAAS,IAAG,mBAAnCC,EAAO,KAAEC,EAAU,KAC1B,EAA0BF,mBAAS,GAAE,mBAA9BG,EAAK,KAAEC,EAAQ,KACtB,EAAwCJ,mBAAS,GAAE,mBAA5CK,EAAY,KAAEC,EAAe,KASpC,OACE,mCACE,cAAC,IAAI,UACH,cAAC,IAAI,CAACC,GAAG,KAAI,SACX,eAAC,IAAK,WACJ,cAAC,IAAW,CAACC,MAAO,CAAEC,WAAY,KAAM,6CAGxC,cAAC,IAAS,UACR,eAAC,IAAI,WACH,cAAC,IAAI,CAACF,GAAG,IAAG,SACV,cAAC,IAAS,CACRG,KAAK,iBACLC,GAAG,iBACHC,KAAK,KACLC,YAAY,qBACZnB,MAAOO,EACPa,SAxBU,SAAAC,GAC1B,IAAMC,EAAOD,EAAME,OAAOvB,MAC1BQ,EAAWc,GACXZ,EAASY,EAAKrB,QACdW,EAAgBU,EAAKE,QAAQ,MAAO,IAAIvB,OAC1C,MAsBc,eAAC,IAAI,CAACY,GAAG,IAAG,UACV,iFAAiBJ,KACjB,uFAAkBE,qBASpC,C","file":"static/js/8.7137a95f.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CTextarea,\n} from '@coreui/react'\n\nconst CharacterCounter = () => {\n  const [message, setMessage] = useState('');\n  const [count, setCount] = useState(0);\n  const [trimmedCount, setTrimmedCount] = useState(0);\n\n  const handleMessageChange = event => {\n    const text = event.target.value;\n    setMessage(text);\n    setCount(text.length);\n    setTrimmedCount(text.replace(/\\s/g, '').length);\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol sm=\"12\">\n          <CCard>\n            <CCardHeader style={{ fontWeight: 700 }}>\n              글자수 세기\n            </CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol sm=\"8\">\n                  <CTextarea\n                    name=\"textarea-input\"\n                    id=\"textarea-input\"\n                    rows=\"15\"\n                    placeholder=\"Input Text Here...\"\n                    value={message}\n                    onChange={handleMessageChange}\n                  />\n                </CCol>\n                <CCol sm=\"4\">\n                  <p>공백 포함 글자 수 : {count}</p>\n                  <p>공백 미포함 글자 수 : {trimmedCount}</p>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default CharacterCounter;"],"sourceRoot":""}
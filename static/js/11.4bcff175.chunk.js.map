{"version":3,"sources":["views/ColorConverter.js"],"names":["Color","require","ColorConverter","useColor","colorPalette","setColorPalette","useState","color","setColor","hex","setHEX","useEffect","e","alert","message","ResultColorGroup","data","result","className","Array","isArray","map","i","value","disabled","type","onClick","tempElem","document","createElement","toString","body","appendChild","select","execCommand","removeChild","copyToClipboard","sm","style","fontWeight","lg","marginBottom","padding","lineHeight","md","custom","name","id","xs","onChange","target","length","toColor","placeholder","textAlign","rgb","hsv","hsl","hwb","cmyk","lab","ansi16","ansi256","display","flexDirection","justifyContent","alignItems","width","height","hideHSV","hideRGB","hideHEX","dark","backgroundColor","borderRadius"],"mappings":"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","file":"static/js/11.4bcff175.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CLabel,\n  CInput,\n  CInputGroup,\n  CInputGroupAppend,\n  CButton,\n  CSelect,\n} from '@coreui/react'\n\nimport { ColorPicker, useColor, toColor } from 'react-color-palette'\nimport \"react-color-palette/lib/css/styles.css\"\n\nvar Color = require('color');\n\nconst ColorConverter = () => {\n  const [colorPalette, setColorPalette] = useColor(\"hex\", \"#121212\");\n  const [color, setColor] = useState(Color(\"#121212\"))\n  const [hex, setHEX] = useState(\"\")\n\n  const setColorHEX = (e) => {\n    var data = e.target && e.target.value;\n    setHEX(data);\n\n    if (data && data.length === 7) {\n      setColorPalette(toColor(\"hex\", data));\n    }\n  }\n\n  // useEffect(() => {\n  //     if (!color) return;\n  //     console.log(color.toJSON());\n  // }, [color])\n\n  useEffect(() => {\n    try {\n      var color = Color(colorPalette.hex)\n      setColor(color)\n    }\n    catch (e) {\n      alert(e.message)\n    }\n  }, [colorPalette])\n\n  const copyToClipboard = (result) => {\n    var tempElem = document.createElement('textarea');\n    tempElem.value = result.toString()\n    document.body.appendChild(tempElem);\n\n    tempElem.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(tempElem);\n\n    alert(`{ ${tempElem.value} } is Copied`);\n  }\n\n  const ResultColorGroup = (data) => {\n    var result = data.color;\n    return (\n      <CInputGroup className=\"mb-2\">\n        {\n          result &&\n            Array.isArray(result)\n            ?\n            result.map((color, i) => {\n              return (\n                <CInput key={i} value={color} disabled />\n              )\n            })\n            :\n            <CInput value={result} disabled />\n        }\n        <CInputGroupAppend>\n          <CButton type=\"button\" color=\"dark\" onClick={(e) => { copyToClipboard(result) }}>Copy</CButton>\n        </CInputGroupAppend>\n      </CInputGroup>\n    )\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol sm=\"12\">\n          <CCard>\n            <CCardHeader style={{ fontWeight: 700 }}>\n              색 변환\n            </CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol lg={8}>\n                  <CCard key='color_converter' style={{ marginBottom: 0 }} >\n                    <CCardBody>\n                      <CRow style={{ padding: '1rem 0 1rem 0', lineHeight: '35px' }}>\n                        <CCol md=\"2\">\n                          <CSelect custom name=\"src_color\" id=\"src_color\" disabled>\n                            <option value=\"HEX\"> HEX </option>\n                            <option value=\"RGB\"> RGB </option>\n                            <option value=\"HSV\"> HSV </option>\n                            <option value=\"CMYK\"> CMYK </option>\n                          </CSelect>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"10\">\n                          <CInputGroup>\n                            <CInput id=\"hex\" value={hex} onChange={setColorHEX} placeholder=\"Input Hex string '#xxxxxx'\"></CInput>\n                          </CInputGroup>\n                          {/* <span className=\"input_hex\">Input Hex string '#xxxxxx' </span> */}\n                        </CCol>\n                        {/* <CCol xs=\"12\" md=\"2\">\n                                                <CButton style={{ width: '100%' }} color=\"dark\"> Convert </CButton>\n                                            </CCol> */}\n                      </CRow>\n                      {color && <>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> HEX </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.hex()} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> RGB </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.rgb().color} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> HSV </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.hsv().color} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> HSl </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.hsl().color} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> HWB </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.hwb().color} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> CMYK </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.cmyk().color} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> LAB </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.lab().color} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> ANSI16 </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.ansi16().color} />\n                          </CCol>\n                        </CRow>\n                        <CRow style={{ lineHeight: '35px' }}>\n                          <CCol md=\"2\" style={{ textAlign: 'center' }}>\n                            <CLabel><b> ANSI256 </b></CLabel>\n                          </CCol>\n                          <CCol md=\"10\">\n                            <ResultColorGroup color={color.ansi256().color} />\n                          </CCol>\n                        </CRow>\n                      </>\n                      }\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n                <CCol lg={4} style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', alignItems: 'center' }}>\n                  <ColorPicker width={400} height={256} color={colorPalette} onChange={setColorPalette} hideHSV hideRGB hideHEX dark />\n                  <div style={{ width: '400px', height: '160px', backgroundColor: colorPalette.hex, borderRadius: '10px' }} />\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default ColorConverter\n"],"sourceRoot":""}
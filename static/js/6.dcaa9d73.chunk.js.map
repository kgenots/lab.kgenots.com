{"version":3,"sources":["routes.js","containers/TheCanvas.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/_nav.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["routes","path","exact","name","component","React","lazy","loading","className","TheCanvas","fallback","map","route","idx","render","props","memo","TheContent","fluid","from","to","TheFooter","fixed","href","target","rel","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","withSubheader","inHeader","onClick","val","includes","type","height","alt","_nav","_tag","icon","customClasses","_children","TheSidebar","show","onShowChange","src","alg","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout","is3D","useLocation","pathname"],"mappings":"uHAAA,oBA8CMA,EAAS,CACb,CAAEC,KAAM,IAAKC,OAAO,EAAMC,KAAM,QAChC,CAAEF,KAAM,aAAcE,KAAM,YAAaC,UA9CzBC,IAAMC,MAAK,kBAAM,2DAAqC,KA+CtE,CAAEL,KAAM,SAAUE,KAAM,QAASC,UA9CrBC,IAAMC,MAAK,kBAAM,mDAAuB,KA+CpD,CAAEL,KAAM,oBAAqBE,KAAM,iBAAkBC,UA9CjCC,IAAMC,MAAK,kBAAM,8BAAuC,KA+C5E,CAAEL,KAAM,eAAgBE,KAAM,iBAAkBC,UA9C3BC,IAAMC,MAAK,kBAAM,2DAAgC,KA+CtE,CAAEL,KAAM,kBAAmBE,KAAM,gBAAiBC,UA9C9BC,IAAMC,MAAK,kBAAM,oDAA0C,KA+C/E,CAAEL,KAAM,qBAAsBE,KAAM,mBAAoBC,UA9CjCC,IAAMC,MAAK,kBAAM,mDAA6C,MAuFxEN,K,+FCpFTO,EACF,qBAAKC,UAAU,mBAAkB,SAC7B,qBAAKA,UAAU,kCAIjBC,EAAY,WACd,OACI,sBAAMD,UAAU,SAAQ,SACpB,cAAC,WAAQ,CAACE,SAAUH,EAAQ,SACxB,cAAC,IAAM,UACFP,IAAOW,KAAI,SAACC,EAAOC,GAChB,OAAOD,EAAMR,WACT,cAAC,IAAK,CAEFH,KAAMW,EAAMX,KACZC,MAAOU,EAAMV,MACbC,KAAMS,EAAMT,KACZW,OAAQ,SAAAC,GAAK,OACT,cAACH,EAAMR,UAAS,eAAKW,GAAS,GAL7BF,EAQjB,SAKpB,EAEeR,cAAMW,KAAKP,E,wGC5BpBF,EACJ,qBAAKC,UAAU,mBAAkB,SAC/B,qBAAKA,UAAU,kCAIbS,EAAa,WACjB,OACE,sBAAMT,UAAU,SAAQ,SACtB,cAAC,IAAU,CAACU,OAAK,WACf,cAAC,WAAQ,CAACR,SAAUH,EAAQ,SAC1B,eAAC,IAAM,WACJP,IAAOW,KAAI,SAACC,EAAOC,GAClB,OAAOD,EAAMR,WACX,cAAC,IAAK,CAEJH,KAAMW,EAAMX,KACZC,MAAOU,EAAMV,MACbC,KAAMS,EAAMT,KACZW,OAAQ,SAAAC,GAAK,OACX,cAAC,IAAK,UACJ,cAACH,EAAMR,UAAS,eAAKW,KACf,GAPLF,EAUX,IACA,cAAC,IAAQ,CAACM,KAAK,IAAIC,GAAG,uBAMlC,EAEef,MAAMW,KAAKC,GC1CpBI,EAAY,WAChB,OACE,eAAC,IAAO,CAACC,OAAO,EAAM,UACpB,gCACE,mBAAGC,KAAK,4BAA4BC,OAAO,SAASC,IAAI,sBAAqB,qBAC7E,sBAAMjB,UAAU,OAAM,iDAExB,sBAAKA,UAAU,WAAU,UACvB,sBAAMA,UAAU,OAAM,wBACtB,mBAAGe,KAAK,0BAA0BC,OAAO,SAASC,IAAI,sBAAqB,mCAInF,EAEepB,MAAMW,KAAKK,G,kBCiFXK,EA1EG,WAChB,IAAMC,EAAWC,cACXC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WAAW,IAY1D,OACE,eAAC,IAAO,CAACG,eAAa,YACpB,cAAC,IAAQ,CACPC,UAAQ,EACRzB,UAAU,oBACV0B,QAVsB,WAC1B,IAAMC,IAAM,EAAC,EAAO,cAAcC,SAASP,IAAsB,aACjEF,EAAS,CAAEU,KAAM,MAAOR,YAAaM,GACvC,IASI,cAAC,IAAQ,CACPF,UAAQ,EACRzB,UAAU,sBACV0B,QApBgB,WACpB,IAAMC,GAAM,EAAC,EAAM,cAAcC,SAASP,IAAuB,aACjEF,EAAS,CAAEU,KAAM,MAAOR,YAAaM,GACvC,IAmBI,cAAC,IAAY,CAAC3B,UAAU,oBAAoBY,GAAG,IAAG,SAChD,cAAC,IAAK,CAACjB,KAAK,OAAOmC,OAAO,KAAKC,IAAI,aA6C3C,ECgQeC,EA9VF,CACX,CACEC,KAAM,kBACNtC,KAAM,YACNiB,GAAI,aACJsB,KAAM,cAAC,IAAK,CAACvC,KAAK,kBAAkBwC,cAAc,wBAEpD,CACEF,KAAM,mBACNG,UAAW,CAAC,eAEd,CACEH,KAAM,kBACNtC,KAAM,wCACNiB,GAAI,kBACJsB,KAAM,cAER,CACED,KAAM,kBACNtC,KAAM,kCACNiB,GAAI,qBACJsB,KAAM,cAER,CACED,KAAM,mBACNG,UAAW,CAAC,UAEd,CACEH,KAAM,kBACNtC,KAAM,sBACNiB,GAAI,eACJsB,KAAM,cAER,CACED,KAAM,mBACNG,UAAW,CAAC,SAEd,CACEH,KAAM,kBACNtC,KAAM,QACNiB,GAAI,SACJsB,KAAM,YAER,CACED,KAAM,sBACNtC,KAAM,eAENuC,KAAM,aACNE,UAAW,CACT,CACEH,KAAM,kBACNtC,KAAM,iBACNiB,GAAI,wBCnCNyB,EAAa,WACjB,IAAMlB,EAAWC,cACXkB,EAAOhB,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WAAW,IAEnD,OACE,eAAC,IAAQ,CACPrB,UAAU,QACVsC,KAAMA,EACNC,aAAc,SAACZ,GAAG,OAAKR,EAAS,CAAEU,KAAM,MAAOR,YAAaM,GAAM,EAAC,UAEnE,eAAC,IAAa,CAAC3B,UAAU,iBAAiBY,GAAG,IAAG,UAC9C,cAAC,IAAI,CACH4B,IAAI,WACJxC,UAAU,uBAEVyC,IAAI,OACJX,OAAQ,KAEV,cAAC,IAAI,CACHU,IAAI,WACJxC,UAAU,4BAEVyC,IAAI,OACJX,OAAQ,QAGZ,cAAC,IAAW,UAEV,cAAC,IAAc,CACbY,MAAOC,EACPC,WAAY,CACVC,uBACAC,wBACAC,oBACAC,0BAIN,cAAC,IAAiB,CAAChD,UAAU,uBAGnC,EAEeH,MAAMW,KAAK6B,G,SC5BXY,UAzBG,WAChB,IACMC,EADWC,cACKC,SAASxB,SAAS,SAExC,OACE,sBAAK5B,UAAU,yBAAwB,UACrC,cAAC,EAAU,IACX,sBAAKA,UAAU,YAAW,UACxB,cAAC,EAAS,IAERkD,EACE,qBAAKlD,UAAU,SAAQ,SACrB,cAACC,EAAA,QAAS,MAGZ,qBAAKD,UAAU,SAAQ,SACrB,cAAC,EAAU,OAGfkD,GAAQ,cAAC,EAAS,SAI5B,C","file":"static/js/6.dcaa9d73.chunk.js","sourcesContent":["import React from 'react';\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\nconst Tasks = React.lazy(() => import('./views/Tasks'));\nconst DefaultCanvas = React.lazy(() => import('./views/threejs/DefaultCanvas'));\nconst ColorConverter = React.lazy(() => import('./views/ColorConverter'));\nconst PostingHelper = React.lazy(() => import('./views/blog-utils/PostingHelper'));\nconst CharacterCounter = React.lazy(() => import('./views/blog-utils/CharacterCounter'));\n\n// const Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\n// const Tables = React.lazy(() => import('./views/base/tables/Tables'));\n\n// const Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\n// const Cards = React.lazy(() => import('./views/base/cards/Cards'));\n// const Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\n// const Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\n// const BasicForms = React.lazy(() => import('./views/base/forms/BasicForms'));\n\n// const Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\n// const ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\n// const Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\n// const Navs = React.lazy(() => import('./views/base/navs/Navs'));\n// const Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\n// const Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\n// const ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\n// const Switches = React.lazy(() => import('./views/base/switches/Switches'));\n\n// const Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\n// const Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\n// const BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\n// const ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\n// const ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\n// const Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\n// const Charts = React.lazy(() => import('./views/charts/Charts'));\n// const CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\n// const Flags = React.lazy(() => import('./views/icons/flags/Flags'));\n// const Brands = React.lazy(() => import('./views/icons/brands/Brands'));\n// const Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\n// const Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\n// const Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\n// const Colors = React.lazy(() => import('./views/theme/colors/Colors'));\n// const Typography = React.lazy(() => import('./views/theme/typography/Typography'));\n// const Widgets = React.lazy(() => import('./views/widgets/Widgets'));\n// const Users = React.lazy(() => import('./views/users/Users'));\n// const User = React.lazy(() => import('./views/users/User'));\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/tasks', name: \"Tasks\", component: Tasks },\n  { path: '/canvas/3d-canvas', name: 'Default Canvas', component: DefaultCanvas },\n  { path: '/utils-color', name: 'ColorConverter', component: ColorConverter },\n  { path: '/posting-helper', name: 'PostingHelper', component: PostingHelper },\n  { path: '/character-counter', name: 'CharacterCounter', component: CharacterCounter },\n  // { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  // { path: '/theme/colors', name: 'Colors', component: Colors },\n  // { path: '/theme/typography', name: 'Typography', component: Typography },\n  // { path: '/base', name: 'Base', component: Cards, exact: true },\n  // { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  // { path: '/base/cards', name: 'Cards', component: Cards },\n  // { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  // { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  // { path: '/base/forms', name: 'Forms', component: BasicForms },\n  // { path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\n  // { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  // { path: '/base/navbars', name: 'Navbars', component: Navbars },\n  // { path: '/base/navs', name: 'Navs', component: Navs },\n  // { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  // { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  // { path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\n  // { path: '/base/switches', name: 'Switches', component: Switches },\n  // { path: '/base/tables', name: 'Tables', component: Tables },\n  // { path: '/base/tabs', name: 'Tabs', component: Tabs },\n  // { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  // { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  // { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  // { path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\n  // { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  // { path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\n  // { path: '/charts', name: 'Charts', component: Charts },\n  // { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  // { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  // { path: '/icons/flags', name: 'Flags', component: Flags },\n  // { path: '/icons/brands', name: 'Brands', component: Brands },\n  // { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  // { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  // { path: '/notifications/badges', name: 'Badges', component: Badges },\n  // { path: '/notifications/modals', name: 'Modals', component: Modals },\n  // { path: '/notifications/toaster', name: 'Toaster', component: Toaster },\n  // { path: '/widgets', name: 'Widgets', component: Widgets },\n  // { path: '/users', exact: true, name: 'Users', component: Users },\n  // { path: '/users/:id', exact: true, name: 'User Details', component: User }\n];\n\nexport default routes;\n","import React, { Suspense } from 'react'\nimport {\n    Route,\n    Switch\n} from 'react-router-dom'\n// import { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst loading = (\n    <div className=\"pt-3 text-center\">\n        <div className=\"sk-spinner sk-spinner-pulse\"></div>\n    </div>\n)\n\nconst TheCanvas = () => {\n    return (\n        <main className=\"e-main\">\n            <Suspense fallback={loading}>\n                <Switch>\n                    {routes.map((route, idx) => {\n                        return route.component && (\n                            <Route\n                                key={idx}\n                                path={route.path}\n                                exact={route.exact}\n                                name={route.name}\n                                render={props => (\n                                    <route.component {...props} />\n                                )} />\n                        )\n                    })}\n                </Switch>\n            </Suspense>\n        </main>\n    )\n}\n\nexport default React.memo(TheCanvas)\n","import React, { Suspense } from 'react'\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://kgenots.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">kgenots</a>\n        <span className=\"ml-1\">All rights reserved. &copy; 2020. </span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">CoreUI for React</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  // CHeaderNav,\n  // CHeaderNavItem,\n  // CHeaderNavLink,\n  // CSubheader,\n  // CBreadcrumbRouter,\n  // CLink\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\n// import routes from '../routes'\n\n// import {\n//   TheHeaderDropdown,\n//   TheHeaderDropdownMssg,\n//   TheHeaderDropdownNotif,\n//   TheHeaderDropdownTasks\n// } from './index'\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({ type: 'set', sidebarShow: val })\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({ type: 'set', sidebarShow: val })\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" />\n      </CHeaderBrand>\n\n      {/* <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>Settings</CHeaderNavLink>\n        </CHeaderNavItem>\n      </CHeaderNav> */}\n\n      {/* <CHeaderNav className=\"px-3\">\n        <TheHeaderDropdownNotif />\n        <TheHeaderDropdownTasks />\n        <TheHeaderDropdownMssg />\n        <TheHeaderDropdown />\n      </CHeaderNav> */}\n\n      {/* <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n          routes={routes}\n        />\n        <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n          <CLink className=\"c-subheader-nav-link\" href=\"#\">\n            <CIcon name=\"cil-speech\" alt=\"Settings\" />\n          </CLink>\n          <CLink\n            className=\"c-subheader-nav-link\"\n            aria-current=\"page\"\n            to=\"/dashboard\"\n          >\n            <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n          <CLink className=\"c-subheader-nav-link\" href=\"#\">\n            <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>\n        </div>\n      </CSubheader> */}\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\n\nconst _nav = [\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\" />,\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['blog-utils']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: '포스팅 도우미',\n    to: '/posting-helper',\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: '글자수 세기',\n    to: '/character-counter',\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['utils']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: '색 변환',\n    to: '/utils-color',\n    icon: 'cil-pencil',\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['labs']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: 'Tasks',\n    to: '/tasks',\n    icon: 'cil-file',\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: '3D _ ThreeJS',\n    // route: '/three',\n    icon: 'cil-puzzle',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Default Canvas',\n        to: '/canvas/3d-canvas',\n      },\n    ]\n  },\n\n  //\n\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Theme']\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: 'cil-drop',\n  // },\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Components']\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Base',\n  //   route: '/base',\n  //   icon: 'cil-puzzle',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Forms',\n  //       to: '/base/forms',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Jumbotron',\n  //       to: '/base/jumbotrons',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Navs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Navbars',\n  //       to: '/base/navbars',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Progress',\n  //       to: '/base/progress-bar',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Switches',\n  //       to: '/base/switches',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Tabs',\n  //       to: '/base/tabs',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Buttons',\n  //   route: '/buttons',\n  //   icon: 'cil-cursor',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Brand buttons',\n  //       to: '/buttons/brand-buttons',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Dropdowns',\n  //       to: '/buttons/button-dropdowns',\n  //     }\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: 'cil-chart-pie'\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Icons',\n  //   route: '/icons',\n  //   icon: 'cil-star',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Notifications',\n  //   route: '/notifications',\n  //   icon: 'cil-bell',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Toaster',\n  //       to: '/notifications/toaster'\n  //     }\n  //   ]\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: 'cil-calculator',\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   _tag: 'CSidebarNavDivider'\n  // },\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Extras'],\n  // },\n  // {\n  //   _tag: 'CSidebarNavDropdown',\n  //   name: 'Pages',\n  //   route: '/pages',\n  //   icon: 'cil-star',\n  //   _children: [\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       _tag: 'CSidebarNavItem',\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Disabled',\n  //   icon: 'cil-ban',\n  //   badge: {\n  //     color: 'secondary',\n  //     text: 'NEW',\n  //   },\n  //   addLinkClass: 'c-disabled',\n  //   'disabled': true\n  // },\n  // {\n  //   _tag: 'CSidebarNavDivider',\n  //   className: 'm-2'\n  // },\n  // {\n  //   _tag: 'CSidebarNavTitle',\n  //   _children: ['Labels']\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Label danger',\n  //   to: '',\n  //   icon: {\n  //     name: 'cil-star',\n  //     className: 'text-danger'\n  //   },\n  //   label: true\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Label info',\n  //   to: '',\n  //   icon: {\n  //     name: 'cil-star',\n  //     className: 'text-info'\n  //   },\n  //   label: true\n  // },\n  // {\n  //   _tag: 'CSidebarNavItem',\n  //   name: 'Label warning',\n  //   to: '',\n  //   icon: {\n  //     name: 'cil-star',\n  //     className: 'text-warning'\n  //   },\n  //   label: true\n  // },\n  // {\n  //   _tag: 'CSidebarNavDivider',\n  //   className: 'm-2'\n  // }\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n  CImg,\n} from '@coreui/react'\n\n// import CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      className='black'\n      show={show}\n      onShowChange={(val) => dispatch({ type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        <CImg\n          src='logo.png'\n          className=\"c-sidebar-brand-full\"\n          // name=\"logo-negative\"\n          alg='logo'\n          height={35}\n        />\n        <CImg\n          src='logo.png'\n          className=\"c-sidebar-brand-minimized\"\n          // name=\"sygnet\"\n          alg='logo'\n          height={35}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\" />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader,\n  TheCanvas,\n} from './index'\n\nconst TheLayout = () => {\n  const location = useLocation();\n  const is3D = location.pathname.includes('three');\n\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar />\n      <div className=\"c-wrapper\">\n        <TheHeader />\n        {\n          is3D ?\n            <div className=\"e-body\">\n              <TheCanvas />\n            </div>\n            :\n            <div className=\"c-body\">\n              <TheContent />\n            </div>\n        }\n        {!is3D && <TheFooter />}\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n"],"sourceRoot":""}